/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/wayfair.glb --transform --precision=10 --shadows --keepnames --meta
*/

import React, { memo, useRef } from "react";
import { useGLTF } from "@react-three/drei";

const Wayfair = (props) => {
  const { nodes, materials } = useGLTF("/models/wayfair-transformed.glb");
  return (
    <group {...props} dispose={null}>
      <mesh
        name="wayfair_center"
        castShadow
        receiveShadow
        geometry={nodes.wayfair_center.geometry}
        material={materials["Material.002"]}
        userData={{ name: "wayfair_center" }}
      />
      <mesh
        name="wayfair_tr"
        castShadow
        receiveShadow
        geometry={nodes.wayfair_tr.geometry}
        material={materials["Material.003"]}
        userData={{ name: "wayfair_tr" }}
      />
      <mesh
        name="wayfair_bl"
        castShadow
        receiveShadow
        geometry={nodes.wayfair_bl.geometry}
        material={materials["Material.005"]}
        userData={{ name: "wayfair_bl" }}
      />
      <mesh
        name="wayfair_tl"
        castShadow
        receiveShadow
        geometry={nodes.wayfair_tl.geometry}
        material={materials["Material.001"]}
        userData={{ name: "wayfair_tl" }}
      />
      <mesh
        name="wayfair_br"
        castShadow
        receiveShadow
        geometry={nodes.wayfair_br.geometry}
        material={materials["Material.004"]}
        userData={{ name: "wayfair_br" }}
      />
    </group>
  );
};

export default memo(Wayfair);

useGLTF.preload("/models/wayfair-transformed.glb");
