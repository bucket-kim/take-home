/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/countries.glb --transform --precision=10 --shadows --keepnames --meta
*/

import React, { useMemo, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import AirPlane from "../Plane/AirPlane";
import * as THREE from "three";

const Countries = (props) => {
  const { nodes } = useGLTF("/models/countries-transformed.glb");

  const nyMat = useMemo(() => {
    return new THREE.MeshStandardMaterial({
      color: "#005eff",
    });
  });
  const nKoreaMat = useMemo(() => {
    return new THREE.MeshStandardMaterial({
      color: "#265e2e",
    });
  });
  const sKoreaMat = useMemo(() => {
    return new THREE.MeshStandardMaterial({
      color: "#0da52c",
    });
  });
  return (
    <group {...props} dispose={null}>
      <AirPlane rotation={[0.5, 1.2, 0]} scale={1.25} position={[0, -2, 3]} />
      <group rotation={[Math.PI / 2, 0, 0]} position={[0, 0, -1]}>
        <mesh
          name="NY"
          receiveShadow
          geometry={nodes.NY.geometry}
          material={nyMat}
          position={[4, 0, -1.2670110464]}
          userData={{ name: "NY" }}
        />
        <group scale={0.85} position={[-1, 0, 0]}>
          <mesh
            name="n_korea"
            receiveShadow
            geometry={nodes.n_korea.geometry}
            material={nKoreaMat}
            position={[-3.3133821487, 0, -0.9241276383]}
            userData={{ name: "n_korea" }}
          />
          <mesh
            name="s_korea"
            receiveShadow
            geometry={nodes.s_korea.geometry}
            material={sKoreaMat}
            position={[-2.9149684906, 0, 0.9012759328]}
            userData={{ name: "s_korea" }}
          />
        </group>
      </group>
    </group>
  );
};

export default Countries;

useGLTF.preload("/models/countries-transformed.glb");
